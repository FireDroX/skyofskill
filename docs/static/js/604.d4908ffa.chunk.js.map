{"version":3,"file":"static/js/604.d4908ffa.chunk.js","mappings":"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","sources":["components/ConverFinalText/ConvertFinalText.jsx","components/ColoredSentence/ColoredSentence.jsx","components/MinecraftColoredText/MinecraftColoredText.jsx","components/ExampleTexts/ExampleTexts.jsx","pages/colors/Colors.jsx"],"sourcesContent":["const ConvertFinalText = ({ text = \"\" }) => {\r\n  const split = Array.from(text.split(/([&].)/g).filter(Boolean));\r\n  let newText = \"\";\r\n  let obfuscatedText = false;\r\n  const replacedArray = Array.from(\r\n    split.map((item) => {\r\n      switch (item) {\r\n        case \"&0\":\r\n          return \"color-black\";\r\n\r\n        case \"&1\":\r\n          return \"color-dark_blue\";\r\n\r\n        case \"&2\":\r\n          return \"color-dark_green\";\r\n\r\n        case \"&3\":\r\n          return \"color-dark_aqua\";\r\n\r\n        case \"&4\":\r\n          return \"color-dark_red\";\r\n\r\n        case \"&5\":\r\n          return \"color-dark_purple\";\r\n\r\n        case \"&6\":\r\n          return \"color-gold\";\r\n\r\n        case \"&7\":\r\n          return \"color-gray\";\r\n\r\n        case \"&8\":\r\n          return \"color-dark_gray\";\r\n\r\n        case \"&9\":\r\n          return \"color-blue\";\r\n\r\n        case \"&a\":\r\n          return \"color-green\";\r\n\r\n        case \"&b\":\r\n          return \"color-aqua\";\r\n\r\n        case \"&c\":\r\n          return \"color-red\";\r\n\r\n        case \"&d\":\r\n          return \"color-light_purple\";\r\n\r\n        case \"&e\":\r\n          return \"color-yellow\";\r\n\r\n        case \"&f\":\r\n          return \"color-white\";\r\n\r\n        case \"&l\":\r\n          return \"color-bold\";\r\n\r\n        case \"&m\":\r\n          return \"color-strikethrough\";\r\n\r\n        case \"&n\":\r\n          return \"color-underline\";\r\n\r\n        case \"&o\":\r\n          return \"color-italic\";\r\n\r\n        case \"&k\":\r\n          obfuscatedText = true;\r\n          return \"mc-obfuscated\";\r\n\r\n        case \"&r\":\r\n          obfuscatedText = false;\r\n          return \"\";\r\n\r\n        default:\r\n          newText = obfuscatedText ? \"\" : item;\r\n          return newText;\r\n      }\r\n    })\r\n  );\r\n\r\n  return (\r\n    <span className={replacedArray.join(\" \").trim()} key={replacedArray.length}>\r\n      {newText}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ConvertFinalText;\r\n","import \"../MinecraftColoredText/MinecraftColoredText.css\";\r\nimport { useState } from \"react\";\r\n\r\nimport ConvertFinalText from \"../ConverFinalText/ConvertFinalText\";\r\n\r\nconst ColoredSentence = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [finalText, setFinalText] = useState([]);\r\n  const [nbOfColors, setNbOfColors] = useState(1);\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText([...modifiedText].join(\"\"));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setText(e.target.value);\r\n    setFinalText(e.target.value.split(\"\"));\r\n  };\r\n\r\n  // Stocke les préfixes des inputs\r\n  const [prefixes, setPrefixes] = useState(Array(nbOfColors).fill(\"\"));\r\n\r\n  // Met à jour un préfixe spécifique\r\n  const handleChange = (index, value) => {\r\n    const newPrefixes = [...prefixes];\r\n    newPrefixes[index] = value;\r\n    setPrefixes(newPrefixes);\r\n  };\r\n\r\n  // Génère le texte modifié\r\n  const modifiedText = finalText.map((char, index) => {\r\n    const prefixIndex = index % nbOfColors;\r\n    return `${prefixes[prefixIndex] || \"\"}${char}&r`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"minecraft-colors\">\r\n      <div className=\"minecraft-txt\">\r\n        <div>\r\n          <small style={{ color: \"var(--text85)\" }}>\r\n            Mot ou Caractère à ajouter\r\n          </small>\r\n          <input\r\n            name=\"Mot / Caractère à ajouter\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"btns-selector\">\r\n          <button onClick={handleCopy}>Copy</button>\r\n        </div>\r\n        <div className=\"final-txt\">\r\n          <small>\r\n            {[...modifiedText].map((e, i) => (\r\n              <ConvertFinalText text={e} key={i} />\r\n            ))}\r\n          </small>\r\n          <small className=\"txt-copy\">{[...finalText].join(\"\")}</small>\r\n        </div>\r\n      </div>\r\n      <div className=\"minecraft-btns\">\r\n        <div>\r\n          <small style={{ color: \"var(--text85)\" }}>Nombre de couleurs</small>\r\n          <input\r\n            name=\"Nombre de couleurs\"\r\n            type=\"number\"\r\n            value={nbOfColors}\r\n            min={1}\r\n            max={6}\r\n            onChange={(e) => setNbOfColors(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          {(() => {\r\n            const colorsInputs = [];\r\n\r\n            for (let i = 0; i < nbOfColors; i++) {\r\n              colorsInputs.push(\r\n                <input\r\n                  key={i}\r\n                  type=\"text\"\r\n                  placeholder={`Prefix ${i + 1}`}\r\n                  onChange={(e) => handleChange(i, e.target.value)}\r\n                />\r\n              );\r\n            }\r\n\r\n            return colorsInputs;\r\n          })()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColoredSentence;\r\n","import \"./MinecraftColoredText.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { IoIosReturnLeft } from \"react-icons/io\";\r\n\r\nimport ConvertFinalText from \"../ConverFinalText/ConvertFinalText\";\r\n\r\nconst MinecraftColoredText = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [finalText, setFinalText] = useState([\r\n    \"&6&l?\",\r\n    \"&e&l LuckyBlock\",\r\n    \"&6&l ?\",\r\n  ]);\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText([...finalText].join(\"\"));\r\n  };\r\n\r\n  const handleInputChange = (e) => setText(e.target.value);\r\n  const handleReturn = () => setFinalText([...finalText.slice(0, -1)]);\r\n\r\n  const handleReset = () => {\r\n    setText(\"\");\r\n    setFinalText([]);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    if (text === \"\") return;\r\n\r\n    const prefix = \"&\";\r\n    const checkboxesColors = document.querySelectorAll(\r\n      '.btns-colors input[type=\"checkbox\"]'\r\n    );\r\n    const checkboxesFormat = document.querySelectorAll(\r\n      '.btns-format input[type=\"checkbox\"]'\r\n    );\r\n    const checkboxes = [...checkboxesColors, ...checkboxesFormat].filter(\r\n      (checkbox) => checkbox.checked\r\n    );\r\n\r\n    const newText = Array.from([text]);\r\n    checkboxes.toReversed().map(({ id }) => {\r\n      if (\r\n        [\"l\", \"m\", \"n\", \"o\", \"k\"].includes(id) &&\r\n        newText[newText.length - 1] !== prefix + \"r\"\r\n      ) {\r\n        newText.push(prefix + \"r\");\r\n      }\r\n      newText.unshift(prefix + id);\r\n\r\n      return true;\r\n    });\r\n\r\n    setFinalText([...finalText, newText.join(\"\")]);\r\n    setText(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkboxes = document.querySelectorAll(\r\n      '.btns-colors input[type=\"checkbox\"]'\r\n    );\r\n    checkboxes.forEach((checkbox) => {\r\n      checkbox.addEventListener(\"change\", function () {\r\n        if (this.checked) {\r\n          checkboxes.forEach((cb) => {\r\n            if (cb !== this) {\r\n              cb.checked = false;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"minecraft-colors\">\r\n      <div className=\"minecraft-txt\">\r\n        <div>\r\n          <small style={{ color: \"var(--text85)\" }}>\r\n            Mot ou Caractère à ajouter\r\n          </small>\r\n          <input\r\n            name=\"Mot / Caractère à ajouter\"\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"btns-selector\">\r\n          <button onClick={handleAdd}>Ajouter</button>\r\n          <button onClick={handleCopy}>Copy</button>\r\n        </div>\r\n        <div className=\"final-txt\">\r\n          <small>\r\n            {[...finalText].map((e, i) => (\r\n              <ConvertFinalText text={e} key={i} />\r\n            ))}\r\n          </small>\r\n          <small className=\"txt-copy\">{[...finalText].join(\"\")}</small>\r\n        </div>\r\n      </div>\r\n      <div className=\"minecraft-btns\">\r\n        <div className=\"btns-colors\">\r\n          <input type=\"checkbox\" id=\"0\" className=\"mc-black\" />\r\n          <input type=\"checkbox\" id=\"1\" className=\"mc-dark_blue\" />\r\n          <input type=\"checkbox\" id=\"2\" className=\"mc-dark_green\" />\r\n          <input type=\"checkbox\" id=\"3\" className=\"mc-dark_aqua\" />\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"4\"\r\n            className=\"mc-dark_red\"\r\n            defaultChecked={true}\r\n          />\r\n          <input type=\"checkbox\" id=\"5\" className=\"mc-dark_purple\" />\r\n          <input type=\"checkbox\" id=\"6\" className=\"mc-gold\" />\r\n          <input type=\"checkbox\" id=\"7\" className=\"mc-gray\" />\r\n          <input type=\"checkbox\" id=\"8\" className=\"mc-dark_gray\" />\r\n          <input type=\"checkbox\" id=\"9\" className=\"mc-blue\" />\r\n          <input type=\"checkbox\" id=\"a\" className=\"mc-green\" />\r\n          <input type=\"checkbox\" id=\"b\" className=\"mc-aqua\" />\r\n          <input type=\"checkbox\" id=\"c\" className=\"mc-red\" />\r\n          <input type=\"checkbox\" id=\"d\" className=\"mc-light_purple\" />\r\n          <input type=\"checkbox\" id=\"e\" className=\"mc-yellow\" />\r\n          <input type=\"checkbox\" id=\"f\" className=\"mc-white\" />\r\n        </div>\r\n        <div className=\"btns-format\">\r\n          <input type=\"checkbox\" id=\"l\" className=\"mc-bold\" />\r\n          <input type=\"checkbox\" id=\"m\" className=\"mc-strikethrough\" />\r\n          <input type=\"checkbox\" id=\"n\" className=\"mc-underline\" />\r\n          <input type=\"checkbox\" id=\"o\" className=\"mc-italic\" />\r\n          <input type=\"checkbox\" id=\"k\" className=\"mc-obfuscated\" />\r\n        </div>\r\n        <div className=\"btns-settings\">\r\n          <button onClick={handleReset}>Reset</button>\r\n          <button onClick={handleReturn}>\r\n            <IoIosReturnLeft />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MinecraftColoredText;\r\n","import \"./ExampleTexts.css\";\r\n\r\nimport ConvertFinalText from \"../ConverFinalText/ConvertFinalText\";\r\n\r\nconst ExampleTexts = () => {\r\n  const textsArray = [\r\n    [\r\n      \"&7&kt&r\",\r\n      \"&f&kt&r\",\r\n      \"&e$\",\r\n      \"&f&kt&r\",\r\n      \"&7&kt&r\",\r\n      \"&6&l L&r\",\r\n      \"&e&la &r\",\r\n      \"&6&lF&r\",\r\n      \"&e&lraude &r\",\r\n      \"&6&lF&r\",\r\n      \"&e&liscale &r\",\r\n      \"&7&kt&r\",\r\n      \"&f&kt&r\",\r\n      \"&e$\",\r\n      \"&f&kt&r\",\r\n      \"&7&kt&r\",\r\n    ],\r\n    [\r\n      \"&b&kt&r\",\r\n      \"&f&kt&r\",\r\n      \"&9☛\",\r\n      \"&b❤\",\r\n      \"&9☚\",\r\n      \"&f&kt&r\",\r\n      \"&b&kt&r\",\r\n      \"&9  (╯°□°)╯︵ ┻━┻  \",\r\n      \"&b&kt&r\",\r\n      \"&f&kt&r\",\r\n      \"&9☛\",\r\n      \"&b❤\",\r\n      \"&9☚\",\r\n      \"&f&kt&r\",\r\n      \"&b&kt&r\",\r\n    ],\r\n    [\r\n      \"&4&kt&r\",\r\n      \"&c&kt&r\",\r\n      \"&f✯\",\r\n      \"&c&kt&r\",\r\n      \"&4&kt&r\",\r\n      \"&c&l S&r\",\r\n      \"&4&la&r\",\r\n      \"&c&lb&r\",\r\n      \"&4&lr&r\",\r\n      \"&c&le L&r\",\r\n      \"&4&la&r\",\r\n      \"&c&ls&r\",\r\n      \"&4&le&r\",\r\n      \"&c&lr &r\",\r\n      \"&4&kt&r\",\r\n      \"&c&kt&r\",\r\n      \"&f✯\",\r\n      \"&c&kt&r\",\r\n      \"&4&kt&r\",\r\n    ],\r\n    [\r\n      \"&7&kt&r\",\r\n      \"&f&kt&r\",\r\n      \"&d❰\",\r\n      \"&f⚔\",\r\n      \"&d❱\",\r\n      \"&f&kt&r\",\r\n      \"&7&kt&r\",\r\n      \"&d&l  天羽々斬  &r\",\r\n      \"&7&kt&r\",\r\n      \"&f&kt&r\",\r\n      \"&d❰\",\r\n      \"&f⚔\",\r\n      \"&d❱\",\r\n      \"&f&kt&r\",\r\n      \"&7&kt&r\",\r\n    ],\r\n  ];\r\n\r\n  const handleCopy = (i) => {\r\n    const text = textsArray[i].join(\"\");\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <h6>Exemples de noms :</h6>\r\n      {textsArray.map((texts, index) => (\r\n        <div className=\"final-txt\" key={index}>\r\n          <small className=\"exemple-copy\" onClick={() => handleCopy(index)}>\r\n            {texts.map((t, i) => (\r\n              <ConvertFinalText text={t} key={i} />\r\n            ))}\r\n          </small>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleTexts;\r\n","import \"./Colors.css\";\r\n\r\nimport ColoredSentence from \"../../components/ColoredSentence/ColoredSentence\";\r\nimport MinecraftColoredText from \"../../components/MinecraftColoredText/MinecraftColoredText\";\r\nimport ExampleTexts from \"../../components/ExampleTexts/ExampleTexts\";\r\n\r\nconst Colors = () => {\r\n  return (\r\n    <section className=\"App\">\r\n      <div>\r\n        <MinecraftColoredText />\r\n        <ColoredSentence />\r\n        <ExampleTexts />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Colors;\r\n"],"names":["_ref","text","split","Array","from","filter","Boolean","newText","obfuscatedText","replacedArray","map","item","_jsx","className","join","trim","children","length","ColoredSentence","setText","useState","finalText","setFinalText","nbOfColors","setNbOfColors","prefixes","setPrefixes","fill","handleChange","index","value","newPrefixes","modifiedText","char","_jsxs","style","color","name","type","onChange","e","target","handleInputChange","onClick","handleCopy","navigator","clipboard","writeText","i","ConvertFinalText","min","max","colorsInputs","push","placeholder","MinecraftColoredText","useEffect","checkboxes","document","querySelectorAll","forEach","checkbox","addEventListener","this","checked","cb","handleAdd","toReversed","id","includes","prefix","unshift","defaultChecked","handleReset","handleReturn","slice","IoIosReturnLeft","ExampleTexts","textsArray","texts","t","Colors"],"sourceRoot":""}