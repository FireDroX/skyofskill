{"version":3,"file":"static/js/404.1c950cf9.chunk.js","mappings":"0KAGA,MAAMA,EAAU,CACd,CAAEC,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,SACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,WACjC,CAAED,OAAQ,gBAAiBC,KAAM,YAkEnC,EAhEkBC,KAChB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAAIC,MACrCC,EAAa,IAAID,KAAK,oCAY5BE,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAQC,aAAY,IAAMN,EAAW,IAAIE,OAAS,KACtD,OAAO,WACLK,cAAcF,EAChB,CAAC,IAGH,MAAMG,EAAeC,IAA8B,IAA7B,MAAEC,EAAK,OAAEd,EAAM,KAAEC,GAAMY,EAC3C,OACEE,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iBAAgBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,UACxBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,OAENI,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,UACzBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIjB,OAENkB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,UACvBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIhB,QAEH,EAIT,OACEiB,EAAAA,EAAAA,KAAA,WAASF,UAAU,MAAKC,UACtBC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,aAAYC,SAAA,CAAC,sCArClBE,MACd,MAAMC,EAAWb,EAAaJ,EACxBkB,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAChBH,EAAQ,MAAwB,MAE7BK,EAAUH,KAAKC,MAAOH,EAAQ,KAAmB,KACjDM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KACtD,MAAM,GAANO,OAAUN,EAAI,QAAAM,OAAOH,EAAK,QAAAG,OAAOF,EAAO,UAAAE,OAASD,EAAO,MA8BZP,OAEtCJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,wBACPC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,iBAAgBC,UAC/BC,EAAAA,EAAAA,KAAA,SAAAD,SACGlB,EAAQ6B,KAAI,CAACC,EAAQf,KACpBI,EAAAA,EAAAA,KAACN,EAAY,CACXZ,OAAQ6B,EAAO7B,OACfC,KAAM4B,EAAO5B,KACba,MAAOA,EAAQ,mBAQrB,C","sources":["pages/noel_2024/Noel_2024.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./Noel_2024.css\";\r\n\r\nconst etoiles = [\r\n  { coords: \"-2052 95 5016\", zone: \"SPAWN\" },\r\n  { coords: \"-1968 95 5007\", zone: \"SPAWN\" },\r\n  { coords: \"-1952 85 5074\", zone: \"SPAWN\" },\r\n  { coords: \"-1950 89 5100\", zone: \"SPAWN\" },\r\n  { coords: \"-1974 91 5102\", zone: \"SPAWN\" },\r\n  { coords: \"-2050 90 5087\", zone: \"SPAWN\" },\r\n  { coords: \"-2043 86 5073\", zone: \"SPAWN\" },\r\n  { coords: \"-2021 88 5057\", zone: \"SPAWN\" },\r\n  { coords: \"-2056 69 5158\", zone: \"WARZONE\" },\r\n  { coords: \"-2116 62 5201\", zone: \"WARZONE\" },\r\n  { coords: \"-2084 64 5236\", zone: \"WARZONE\" },\r\n  { coords: \"-2100 59 5232\", zone: \"WARZONE\" },\r\n  { coords: \"-2001 59 5302\", zone: \"WARZONE\" },\r\n  { coords: \"-1983 59 5333\", zone: \"WARZONE\" },\r\n  { coords: \"-1941 75 5182\", zone: \"WARZONE\" },\r\n  { coords: \"-1891 63 5181\", zone: \"WARZONE\" },\r\n  { coords: \"-1902 59 5238\", zone: \"WARZONE\" },\r\n  { coords: \"-1967 64 5382\", zone: \"WARZONE\" },\r\n  { coords: \"-1894 65 5363\", zone: \"WARZONE\" },\r\n  { coords: \"-1974 25 5212\", zone: \"WARZONE\" },\r\n];\r\nconst Noel_2024 = () => {\r\n  const [newTime, setNewTime] = useState(new Date());\r\n  const eventTimer = new Date(\"Dec 25, 2024 23:59:59 GMT+00:00\");\r\n\r\n  const getTime = () => {\r\n    const timeDiff = eventTimer - newTime;\r\n    const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor(\r\n      (timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\r\n    return `${days}d - ${hours}h - ${minutes}min - ${seconds}s`;\r\n  };\r\n  useEffect(() => {\r\n    let timer = setInterval(() => setNewTime(new Date()), 1000);\r\n    return function cleanUp() {\r\n      clearInterval(timer);\r\n    };\r\n  });\r\n\r\n  const TableEtoiles = ({ index, coords, zone }) => {\r\n    return (\r\n      <tr className=\"noel-container\">\r\n        <td className=\"noel-place\">\r\n          <p>{index}</p>\r\n        </td>\r\n        <td className=\"noel-coords\">\r\n          <p>{coords}</p>\r\n        </td>\r\n        <td className=\"noel-zone\">\r\n          <p>{zone}</p>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <div>\r\n        <div className=\"noel-event\">\r\n          <p className=\"noel-timer\">\r\n            L'evenement Noel ce termine dans : {getTime()}\r\n          </p>\r\n          <div className=\"noel-citrouilles\">\r\n            <small>Chasse aux Etoiles</small>\r\n            <table className=\"noel-container\">\r\n              <tbody>\r\n                {etoiles.map((etoile, index) => (\r\n                  <TableEtoiles\r\n                    coords={etoile.coords}\r\n                    zone={etoile.zone}\r\n                    index={index + 1}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Noel_2024;\r\n"],"names":["etoiles","coords","zone","Noel_2024","newTime","setNewTime","useState","Date","eventTimer","useEffect","timer","setInterval","clearInterval","TableEtoiles","_ref","index","_jsxs","className","children","_jsx","getTime","timeDiff","days","Math","floor","hours","minutes","seconds","concat","map","etoile"],"sourceRoot":""}