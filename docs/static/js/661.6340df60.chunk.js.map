{"version":3,"file":"static/js/661.6340df60.chunk.js","mappings":"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AM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,QACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,MACrB,CAAE9E,KAAM,MAAO8E,KAAM,OACrB,CAAE9E,KAAM,MAAO8E,KAAM,O","sources":["components/InputValues/InputValues.jsx","components/OutputValues/OutputValues.jsx","components/FooterPrestigesValues/FooterPrestigesValues.jsx","pages/minage/Minage.jsx","utils/functions.js","utils/values.js"],"sourcesContent":["import \"./InputValues.css\";\r\n\r\nimport { mines, boosts } from \"../../utils/values\";\r\n\r\nconst InputValues = ({\r\n  fortune,\r\n  setFortune,\r\n  blocs,\r\n  setBlocs,\r\n  mine,\r\n  setMine,\r\n  boost,\r\n  setBoost,\r\n}) => {\r\n  const handleInputChange = (e, v) => {\r\n    let newValue = e.target.value.replace(/[^0-9]/g, \"\");\r\n    if (newValue > 999999) newValue = 999999;\r\n\r\n    switch (v) {\r\n      case \"fortune\":\r\n        setFortune(Number(newValue));\r\n        break;\r\n      case \"blocs\":\r\n        setBlocs(Number(newValue));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-values\">\r\n      <div>\r\n        <small>Fortune de votre pioche</small>\r\n        <input\r\n          name=\"Fortune de votre pioche\"\r\n          type=\"text\"\r\n          value={fortune}\r\n          onChange={(e) => handleInputChange(e, \"fortune\")}\r\n        />\r\n      </div>\r\n      <div>\r\n        <small>Votre mine prestige</small>\r\n        <select\r\n          name=\"Votre mine prestige\"\r\n          defaultValue={mine}\r\n          onChange={(e) => setMine(e.target.value)}\r\n        >\r\n          {mines.map((mine, index) => (\r\n            <option key={index} value={index}>\r\n              {mine.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <small>Votre boost de minage</small>\r\n        <select\r\n          name=\"Votre boost de minage\"\r\n          defaultValue={boost}\r\n          onChange={(e) => setBoost(e.target.value)}\r\n        >\r\n          {boosts.map((b, index) => (\r\n            <option key={index} value={index}>\r\n              {b.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <small>Blocs cassé / 15 minutes</small>\r\n        <input\r\n          name=\"Blocs cassé / 15 minutes\"\r\n          type=\"text\"\r\n          value={blocs}\r\n          onChange={(e) => handleInputChange(e, \"blocs\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputValues;\r\n","import \"./OutputValues.css\";\r\n\r\nimport { compactNumber, formatNumberWithSpaces } from \"../../utils/functions\";\r\nimport { mines, boosts } from \"../../utils/values\";\r\nimport { FaCoins } from \"react-icons/fa6\";\r\n\r\nconst OutputValues = ({ mine, fortune, boost, blocs }) => {\r\n  const CalcValues = () => {\r\n    const bloc = Math.round(\r\n      mines[mine].value * (fortune + 1) * boosts[boost].multiplicateur\r\n    );\r\n    const _15min = Math.round(bloc * blocs);\r\n    const _30sec = Math.round(_15min / 30);\r\n    const _1h = Math.round(_15min * 4);\r\n\r\n    return (\r\n      <div className=\"minage-output\">\r\n        <div>\r\n          <div>\r\n            <h4>{compactNumber(bloc)}</h4>\r\n            <FaCoins />\r\n            <h6>/ Bloc</h6>\r\n          </div>\r\n          <small>\r\n            ( {formatNumberWithSpaces(bloc)} <FaCoins />)\r\n          </small>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <h4>{compactNumber(_30sec)}</h4>\r\n            <FaCoins />\r\n            <h6>/ 30s</h6>\r\n          </div>\r\n          <small>\r\n            ( {formatNumberWithSpaces(_30sec)} <FaCoins />)\r\n          </small>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <h4>{compactNumber(_15min)}</h4>\r\n            <FaCoins />\r\n            <h6>/ 15min</h6>\r\n          </div>\r\n          <small>\r\n            ( {formatNumberWithSpaces(_15min)} <FaCoins />)\r\n          </small>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <h4>{compactNumber(_1h)}</h4>\r\n            <FaCoins />\r\n            <h6>/ heure</h6>\r\n          </div>\r\n          <small>\r\n            ( {formatNumberWithSpaces(_1h)} <FaCoins />)\r\n          </small>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"calc-values\">\r\n      <CalcValues />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutputValues;\r\n","import \"./FooterPrestigesValues.css\";\r\n\r\nimport { formatNumberWithSpaces } from \"../../utils/functions\";\r\nimport { mines } from \"../../utils/values\";\r\n\r\nconst FooterPrestigesValues = () => {\r\n  return (\r\n    <details className=\"footer\">\r\n      <summary>Mine de la moins rentable à la plus rentable :</summary>\r\n      <table>\r\n        <tbody className=\"parent\">\r\n          {[...mines]\r\n            .sort((a, b) => a.value - b.value)\r\n            .map((mine, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <small>\r\n                    {mine.name} = {formatNumberWithSpaces(mine.value)}\r\n                  </small>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </details>\r\n  );\r\n};\r\n\r\nexport default FooterPrestigesValues;\r\n","import \"./Minage.css\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../utils/contexts/UserContext\";\r\n\r\nimport InputValues from \"../../components/InputValues/InputValues\";\r\nimport OutputValues from \"../../components/OutputValues/OutputValues\";\r\nimport FooterPrestigesValues from \"../../components/FooterPrestigesValues/FooterPrestigesValues\";\r\n\r\nconst Minage = () => {\r\n  const {\r\n    fortune,\r\n    setFortune,\r\n    blocs,\r\n    setBlocs,\r\n    mine,\r\n    setMine,\r\n    boost,\r\n    setBoost,\r\n  } = useContext(UserContext);\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <div>\r\n        <div className=\"minage-values\">\r\n          <InputValues\r\n            fortune={fortune}\r\n            setFortune={setFortune}\r\n            blocs={blocs}\r\n            setBlocs={setBlocs}\r\n            mine={mine}\r\n            setMine={setMine}\r\n            boost={boost}\r\n            setBoost={setBoost}\r\n          />\r\n          <OutputValues\r\n            mine={mine}\r\n            fortune={fortune}\r\n            blocs={blocs}\r\n            boost={boost}\r\n          />\r\n        </div>\r\n        <FooterPrestigesValues />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Minage;\r\n","export const compactNumber = (number = Number) => {\r\n  const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\", \"Q\", \"Qu\"];\r\n  let suffixNum = Math.floor((\"\" + number).length / 3);\r\n\r\n  let shortValue = parseFloat(\r\n    (suffixNum !== 0 ? number / Math.pow(1000, suffixNum) : number).toPrecision(\r\n      3\r\n    )\r\n  );\r\n\r\n  if (shortValue % 1 !== 0 && !(shortValue < 1 && suffixNum > 0))\r\n    shortValue = shortValue.toFixed(1);\r\n\r\n  if (shortValue < 1 && suffixNum > 0) {\r\n    shortValue = shortValue.toFixed(3);\r\n    shortValue *= 1000;\r\n    suffixNum--;\r\n  }\r\n\r\n  return shortValue + suffixes[suffixNum];\r\n};\r\n\r\nexport const formatNumberWithSpaces = (number = 0) => {\r\n  const numberString = number.toString();\r\n  const groups = [];\r\n  for (let i = numberString.length; i > 0; i -= 3) {\r\n    groups.unshift(numberString.substring(Math.max(0, i - 3), i));\r\n  }\r\n\r\n  // if (groups.length > 5) return \"That number is too big...\";\r\n  // else return groups.join(\" \");\r\n\r\n  return groups.join(\" \");\r\n};\r\n\r\nexport const numberToMonth = (number = Number) => {\r\n  const months = [\r\n    \"Janvier\",\r\n    \"Février\",\r\n    \"Mars\",\r\n    \"Avril\",\r\n    \"Mai\",\r\n    \"Juin\",\r\n    \"Juillet\",\r\n    \"Août\",\r\n    \"Septembre\",\r\n    \"Octobre\",\r\n    \"Novembre\",\r\n    \"Décembre\",\r\n  ];\r\n  if (number >= 1 && number <= 12) return months[number - 1];\r\n  else return months[0];\r\n};\r\n\r\nexport const findHexCharacters = (inputString) => {\r\n  if ([undefined, \"\"].includes(inputString)) return [\"4\", \"c\"];\r\n  const hexCharacters = inputString.match(/[0-9a-fA-F]{1,2}/g);\r\n  return hexCharacters ? hexCharacters.map((hex) => hex.substring(0, 2)) : [];\r\n};\r\n\r\nexport const romanToNumber = (roman) => {\r\n  const romanNumeralMap = {\r\n    I: 1,\r\n    V: 5,\r\n    X: 10,\r\n  };\r\n\r\n  let result = 0;\r\n  for (let i = 0; i < roman.length; i++) {\r\n    if (romanNumeralMap[roman[i]] < romanNumeralMap[roman[i + 1]]) {\r\n      result -= romanNumeralMap[roman[i]];\r\n    } else {\r\n      result += romanNumeralMap[roman[i]];\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const extractAndConvertEnchantLevel = (item) => {\r\n  const enchantLevel = item.enchants[0]\r\n    .replace(/&[0-9a-fA-Fr]/g, \"\")\r\n    .split(\" \")[1];\r\n  return isNaN(enchantLevel)\r\n    ? romanToNumber(enchantLevel)\r\n    : parseInt(enchantLevel);\r\n};\r\n\r\nexport const checkItemType = (item, searchType) => {\r\n  switch (searchType) {\r\n    case \"pioche\":\r\n      return item.type === 7;\r\n    case \"arc\":\r\n      return item.type === 6;\r\n    case \"hache\":\r\n      return item.type === 5;\r\n    case \"épée\":\r\n      return item.type === 4;\r\n    case \"bottes\":\r\n      return item.type === 3;\r\n    case \"pantalon\":\r\n      return item.type === 2;\r\n    case \"plastron\":\r\n      return item.type === 1;\r\n    case \"casque\":\r\n      return item.type === 0;\r\n    case \"all\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const filterItems = (item, search) => {\r\n  const itemNameMatches = item.defaultName.toLowerCase().match(search);\r\n  const itemTypeMatches = checkItemType(item, search.split(\":\")[1]);\r\n  return itemNameMatches || itemTypeMatches;\r\n};","export const mines = [\r\n  { name: \"Mine p5\", value: 480 },\r\n  { name: \"Mine p10\", value: 750 },\r\n  { name: \"Mine p15\", value: 1250 },\r\n  { name: \"Mine p20\", value: 3000 },\r\n  { name: \"Mine p25\", value: 3750 },\r\n  { name: \"Mine p30\", value: 5600 },\r\n  { name: \"Mine p35\", value: 7000 },\r\n  { name: \"Mine p40\", value: 9500 },\r\n  { name: \"Mine p45\", value: 11500 },\r\n  { name: \"Mine p50\", value: 14500 },\r\n  { name: \"Mine p55\", value: 16000 },\r\n  { name: \"Mine p60\", value: 18000 },\r\n  { name: \"Mine p65\", value: 21000 },\r\n  { name: \"Mine p70\", value: 24000 },\r\n  { name: \"Mine p75\", value: 28800 },\r\n  { name: \"Mine p80\", value: 32600 },\r\n  { name: \"Mine p85\", value: 36700 },\r\n  { name: \"Mine p90\", value: 40000 },\r\n  { name: \"Mine A\", value: 9 },\r\n  { name: \"Mine B\", value: 10 },\r\n  { name: \"Mine C\", value: 15 },\r\n  { name: \"Mine D\", value: 17 },\r\n  { name: \"Mine E\", value: 20 },\r\n  { name: \"Mine F\", value: 23 },\r\n  { name: \"Mine G\", value: 30 },\r\n  { name: \"Mine H\", value: 44 },\r\n  { name: \"Mine I\", value: 60 },\r\n  { name: \"Mine J\", value: 75 },\r\n  { name: \"Mine K\", value: 90 },\r\n  { name: \"Mine L\", value: 115 },\r\n  { name: \"Mine M\", value: 122 },\r\n  { name: \"Mine N\", value: 130 },\r\n  { name: \"Mine O\", value: 160 },\r\n  { name: \"Mine P\", value: 175 },\r\n  { name: \"Mine Q\", value: 188 },\r\n  { name: \"Mine R\", value: 205 },\r\n  { name: \"Mine S\", value: 218 },\r\n  { name: \"Mine T\", value: 218 },\r\n  { name: \"Mine U\", value: 235 },\r\n  { name: \"Mine V\", value: 245 },\r\n  { name: \"Mine W\", value: 275 },\r\n  { name: \"Mine X\", value: 275 },\r\n  { name: \"Mine Y\", value: 305 },\r\n  { name: \"Mine Z\", value: 310 },\r\n  { name: \"Mine VIP1\", value: 260 },\r\n  { name: \"Mine VIP2\", value: 330 },\r\n  { name: \"SuperMine\", value: 2000 },\r\n];\r\n\r\nexport const boosts = [\r\n  { name: \"Boost x0\", multiplicateur: 1 },\r\n  { name: \"Boost x1.2\", multiplicateur: 1.2 },\r\n  { name: \"Boost x1.4\", multiplicateur: 1.4 },\r\n  { name: \"Boost x1.6\", multiplicateur: 1.6 },\r\n  { name: \"Boost x1.8\", multiplicateur: 1.8 },\r\n  { name: \"Boost x2.25\", multiplicateur: 2.25 },\r\n  { name: \"Boost x2.5\", multiplicateur: 2.5 },\r\n  { name: \"Boost x2\", multiplicateur: 2 },\r\n  { name: \"Boost x3\", multiplicateur: 3 },\r\n  { name: \"Boost x4\", multiplicateur: 4 },\r\n  { name: \"Boost x5\", multiplicateur: 5 },\r\n  { name: \"Boost x6\", multiplicateur: 6 },\r\n  { name: \"Boost x7\", multiplicateur: 7 },\r\n  { name: \"Boost x8\", multiplicateur: 8 },\r\n  { name: \"Boost x10\", multiplicateur: 10 },\r\n  { name: \"Boost x20\", multiplicateur: 20 },\r\n  { name: \"Boost x30 \", multiplicateur: 30 },\r\n];\r\n\r\nexport const prestiges = [\r\n  { name: \"P0\", prix: 0 },\r\n  { name: \"P1\", prix: 15000000000 },\r\n  { name: \"P2\", prix: 15000000000 },\r\n  { name: \"P3\", prix: 25000000000 },\r\n  { name: \"P4\", prix: 50000000000 },\r\n  { name: \"P5\", prix: 60000000000 },\r\n  { name: \"P6\", prix: 80000000000 },\r\n  { name: \"P7\", prix: 100000000000 },\r\n  { name: \"P8\", prix: 140000000000 },\r\n  { name: \"P9\", prix: 180000000000 },\r\n  { name: \"P10\", prix: 220000000000 },\r\n  { name: \"P11\", prix: 260000000000 },\r\n  { name: \"P12\", prix: 300000000000 },\r\n  { name: \"P13\", prix: 320000000000 },\r\n  { name: \"P14\", prix: 360000000000 },\r\n  { name: \"P15\", prix: 400000000000 },\r\n  { name: \"P16\", prix: 450000000000 },\r\n  { name: \"P17\", prix: 510000000000 },\r\n  { name: \"P18\", prix: 580000000000 },\r\n  { name: \"P19\", prix: 610000000000 },\r\n  { name: \"P20\", prix: 650000000000 },\r\n  { name: \"P21\", prix: 700000000000 },\r\n  { name: \"P22\", prix: 750000000000 },\r\n  { name: \"P23\", prix: 820000000000 },\r\n  { name: \"P24\", prix: 880000000000 },\r\n  { name: \"P25\", prix: 920000000000 },\r\n  { name: \"P26\", prix: 1000000000000 },\r\n  { name: \"P27\", prix: 1150000000000 },\r\n  { name: \"P28\", prix: 1250000000000 },\r\n  { name: \"P29\", prix: 1400000000000 },\r\n  { name: \"P30\", prix: 1550000000000 },\r\n  { name: \"P31\", prix: 1650000000000 },\r\n  { name: \"P32\", prix: 1750000000000 },\r\n  { name: \"P33\", prix: 1850000000000 },\r\n  { name: \"P34\", prix: 1950000000000 },\r\n  { name: \"P35\", prix: 2100000000000 },\r\n  { name: \"P36\", prix: 2200000000000 },\r\n  { name: \"P37\", prix: 2350000000000 },\r\n  { name: \"P38\", prix: 2500000000000 },\r\n  { name: \"P39\", prix: 3000000000000 },\r\n  { name: \"P40\", prix: 3300000000000 },\r\n  { name: \"P41\", prix: 3500000000000 },\r\n  { name: \"P42\", prix: 3750000000000 },\r\n  { name: \"P43\", prix: 4200000000000 },\r\n  { name: \"P44\", prix: 4800000000000 },\r\n  { name: \"P45\", prix: 5500000000000 },\r\n  { name: \"P46\", prix: 6500000000000 },\r\n  { name: \"P47\", prix: 7500000000000 },\r\n  { name: \"P48\", prix: 8500000000000 },\r\n  { name: \"P49\", prix: 9000000000000 },\r\n  { name: \"P50\", prix: 10000000000000 },\r\n  { name: \"P51\", prix: 9000000000000 },\r\n  { name: \"P52\", prix: 9000000000000 },\r\n  { name: \"P53\", prix: 10000000000000 },\r\n  { name: \"P54\", prix: 10000000000000 },\r\n  { name: \"P55\", prix: 20000000000000 },\r\n  { name: \"P56\", prix: 10000000000000 },\r\n  { name: \"P57\", prix: 10000000000000 },\r\n  { name: \"P58\", prix: 15000000000000 },\r\n  { name: \"P59\", prix: 20000000000000 },\r\n  { name: \"P60\", prix: 55000000000000 },\r\n  { name: \"P61\", prix: 25000000000000 },\r\n  { name: \"P62\", prix: 25000000000000 },\r\n  { name: \"P63\", prix: 27500000000000 },\r\n  { name: \"P64\", prix: 30000000000000 },\r\n  { name: \"P65\", prix: 100000000000000 },\r\n  { name: \"P66\", prix: 32500000000000 },\r\n  { name: \"P67\", prix: 35000000000000 },\r\n  { name: \"P68\", prix: 40000000000000 },\r\n  { name: \"P69\", prix: 55000000000000 },\r\n  { name: \"P70\", prix: 150000000000000 },\r\n  { name: \"P71\", prix: 50000000000000 },\r\n  { name: \"P72\", prix: 10000000000000 },\r\n  { name: \"P73\", prix: 20000000000000 },\r\n  { name: \"P74\", prix: 40000000000000 },\r\n  { name: \"P75\", prix: 200000000000000 },\r\n  { name: \"P76\", prix: 200000000000000 },\r\n  { name: \"P77\", prix: 225000000000000 },\r\n  { name: \"P78\", prix: 250000000000000 },\r\n  { name: \"P79\", prix: 250000000000000 },\r\n  { name: \"P80\", prix: 350000000000000 },\r\n  { name: \"P81\", prix: 230000000000000 },\r\n  { name: \"P82\", prix: 260000000000000 },\r\n  { name: \"P83\", prix: 290000000000000 },\r\n  { name: \"P84\", prix: 320000000000000 },\r\n  { name: \"P85\", prix: 400000000000000 },\r\n  { name: \"P86\", prix: 240000000000000 },\r\n  { name: \"P87\", prix: 260000000000000 },\r\n  { name: \"P88\", prix: 300000000000000 },\r\n  { name: \"P89\", prix: 320000000000000 },\r\n  { name: \"P90\", prix: 450000000000000 },\r\n];\r\n"],"names":["_ref","fortune","setFortune","blocs","setBlocs","mine","setMine","boost","setBoost","handleInputChange","e","v","newValue","target","value","replace","Number","_jsxs","className","children","_jsx","name","type","onChange","defaultValue","mines","map","index","boosts","b","CalcValues","bloc","Math","round","multiplicateur","_15min","_30sec","_1h","compactNumber","FaCoins","formatNumberWithSpaces","FooterPrestigesValues","sort","a","Minage","useContext","UserContext","InputValues","OutputValues","number","arguments","length","undefined","suffixNum","floor","shortValue","parseFloat","pow","toPrecision","toFixed","numberString","toString","groups","i","unshift","substring","max","join","numberToMonth","months","findHexCharacters","inputString","includes","hexCharacters","match","hex","extractAndConvertEnchantLevel","item","enchantLevel","enchants","split","isNaN","roman","romanNumeralMap","I","V","X","result","romanToNumber","parseInt","filterItems","search","itemNameMatches","defaultName","toLowerCase","itemTypeMatches","checkItemType","searchType","prestiges","prix"],"sourceRoot":""}